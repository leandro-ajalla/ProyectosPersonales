Strings

1. Hacer un programa que muestre las letras de una palabra:
a. en grupos de, como máximo, dos letras:
Ej.
Ingrese una palabra: abalorios
ab
al
or
io
s
b. una a una, en orden inverso
Ingrese una palabra: lechuga
a
g
u
h
c
e
l
c. primero las que están en lugares impares, luego el resto:
Ingrese una palabra: escalera
saea
eclr

2. Hacer una función que recibe S1 y S2 (dos strings) y devuelve un string S formada
por la primera letra de S1, la primera letra de S2, la segunda de S1, la segunda de
S2 etc.
Ej.
> palta
> mango
pmaalntgao
> papa
> lechuga
plaepcahuga

3. Sin usar funciones incorporadas (index, find, count, etc), ni el tercer argumento
de [::] hacer programas que:
a. Inviertan una frase (Ej. Si ingresa "el árbol" muestra "lobrá le")
b. Indique si un string está contenido o no en otro, y en qué posición.
Ej.
ingrese frase: volaba solamente con el sol en contra
ingrese frase a buscar: ol
ol se encuentra en posición 1, 8, 25
c. Reemplace un string por otro en una frase
Ej.
ingrese frase: volaba solamente con el sol en contra
buscar: ol
reemplazar por: -?-
v-?-aba s-?-amente con el s-?- en contra
d. Desplace una frase una cantidad de posiciones determinada a izquierda o derecha.
Ej.
Ingrese frase: la fiesta
Posiciones: 3
Dirección (d: derecha / i: izquierda) : d
stala fie
Ingrese frase: la fiesta
Posiciones: 4
Dirección (d: derecha / i: izquierda) : i
iestala f

4. Determine si una frase es palíndroma (ver algunas en
https://es.wikipedia.org/wiki/Pal%C3%ADndromo#En_espa%C3%B1ol)
Ej.
Ingrese texto: Luz azul
es palíndroma

5. Mostrar la abreviatura de una frase ingresada. La abreviatura, para este programa
será el conjunto de las primeras letras de cada palabra que forma la frase, en
mayúsculas (aunque se haya ingresado en minúsculas)
Ingrese frase: Club El Espanto
C.E.E.
Ingrese frase: comando especial de ensaladas
C.E.E.

6. Analizar una frase e informar su longitud, cantidad de mayúsculas, de minúsculas,
de dígitos, de vocales, de consonantes.
Ingrese frase: En 2005 fue el épico triunfo de El Espanto
Longitud: 43
Mayúsculas: 3
Minúsculas: 27
Vocales: 14
Consonantes: 15

7. Hacer una función que reciba un string S y un número N; tiene que devolver un
string formado repitiendo las N
primeras letras de S, luego las N-1, luego N-2… etc.
Ej.
repeatFront("Chocolate", 4) → "ChocChoChC"
repeatFront("Chocolate", 3) → "ChoChC"
repeatFront("Ice Cream", 2) → "IcI"
7. Hacer una función que recibe S1 y S2 y devuelve True si S1 termina con S2, o S2
termina en S1. Si no devuelve False
Mayúsculas y minúsculas se consideran iguales.
endOther("Hiabc", "abc") → true
endOther("AbC", "HiaBc") → true
endOther("abc", "abXabc") → true

8. Ingresar una palabra e informar cuántos puntos sumaría en scrabble
Ingrese palabra: Jirafa
Jirafa Suma 16 puntos
Nota: Los puntajes por letra son:
1 punto: a, e, i, l, n, o, r, s, t, u
2 puntos: d, g
3 puntos: b, c, m, p
4 puntos: f, h, v, y
5 puntos: q
8 puntos: j, ñ, x
10 puntos: z
(https://es.wikipedia.org/wiki/Scrabble)
- extra → considerar letras dobles: ch 5 puntos, ll y rr 8 puntos.

9. Ingresar frases desde teclado; luego de ingresar Q, informar cuál fue la frase más
larga ingresada y su longitud, y la longitud promedio de todas las frases
Ej.:
> alfa beta
> delta
> uno dos tres
> el colegio
> Q
La frase más larga es: "uno dos tres"
y su longitud es: 12
La longitud promedio es: 9

10. Hacer un programa que aplique "Cifrado César" a una frase. El usuario ingresa:
desplazamiento y dirección, mensaje a cifrar y el programa muestra el alfabeto
normal y el desplazado y el mensaje codificado.
Ej.
Ingrese desplazamiento: 6
Ingrese dirección: Derecha
El alfabeto desplazado y codificado:
ABCDEFGHIJKLMNÑOPQRSTUVWXYZ
GHIJKLMNÑOPQRSTUVWXYZABCDEF
Ingrese el texto original: WIKIPEDIA, LA ENCICLOPEDIA LIBRE
El texto codificado es: CÑPÑVKJÑG, QG KSIÑIQUVKJÑG QÑHXK
(ver https://es.wikipedia.org/wiki/Cifrado_C%C3%A9sar)

11. Hacer un programa que sirva para decodificar un mensaje codificado en el
ejercicio anterior.
a. conociendo desplazamiento y dirección
b. sin conocer dirección ni desplazamiento, que muestre todas las posibles frases (ver
en el link de wikipedia citado arriba)
ej.
mensaje recibido: Ep exeuyi
Se listan a continuación las posibilidades (desplazamiento mensaje):
0 Ep exeuyi
1 Do dwdtxh
2 Cn cvcswg
3 Bm bubrvf
4 Al ataque
5 Zk zszptd
6 Yj yryosc
...
23 Hs hahxbl
24 Gr gzgwak
25 Fq fyfvzj

12. Generar una clave de entre 8 y 20 caracteres, determinada por el usuario.
Debería contener:
- dos dígitos si la longitud es menor o igual a 10 y 4 si es mayor
- dos símbolos si la longitud es menor o igual a 10 y 4 si es mayor
- La cantidad de mayúsculas y minúsculas debe ser igual (si la longitud de la clave
es par) o diferir en 1*
El usuario ingresa longitud y el programa genera aleatoriamente la contraseña.
longitud dígitos símbolos mayúsculas minúsculas
8 2 2 2 2
9 2 2 2 / 3 3 / 2
10 2 2 3 3
11 4 4 1 / 2 2 / 1
12 4 4 2 2
13 4 4 2 / 3 3 / 2
14 4 4 3 3
etc.
* si prefieren, si la longitud es impar pueden agregar o eliminar un símbolo o un dígito
a elección, y dejar cantidades de letras iguales; ej.
longitud dígitos símbolos mayúsculas minúsculas
11 4 / 3 3 / 4 2 2
12 4 4 2 2
13 4 / 3 3 / 4 3 3
etc.
extra -> evitar símbolos duplicados

13. Hacer un analizador de fortaleza de passwords. Considerar:
+4 por cada caracter, dígito, símbolo
+2 por cada símbolo que no esté en el inicio o en el final
+(longitud - cantidad de mayúsculas) * 2 -solo si hay mayúsculas-
+(longitud - cantidad de minúsculas) * 2 -solo si hay minúsculas
+2 por cada uno de estas características:
largo >= 8
hay mayúsculas
hay minúsculas
hay dígitos
hay símbolos
-4 por cada par de símbolos correlativos
-2 por cada símbolo duplicado
Ej.
Ingrese password: ef7G1?dG1_
Fortaleza: 74
longitud: 10 => +40
Nota:
+2 (por el ?)
+(10 - 2) * 2 => +16 (hay 2 mayúsculas)
+(10 - 3) * 2 => +14 (hay 3 minúsculas)
+2 por largo >= 8
+2 (hay mayúsculas)
+2 (hay minúsculas)
+2 (hay dígitos)
+2 (hay símbolos)
-4 porque hay un par de símbolos correlativos: ef
-2 porque la G está duplicada
-2 porque el 1 está duplicado

14. Determinar si dos palabras o frases son anagramas (sin utilizar diccionarios,
listas, tuplas o sets)
